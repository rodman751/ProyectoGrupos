@model CalendarViewModel

    <div class="container-fluid py-4">
        <div class="calendar-container">
            <div class="calendar-header">
                <h3 class="mb-0">Calendario de @Model.GrupoNombre</h3>
               
            </div>
        @if (ViewBag.EsAdministrador)
        {
            <a asp-controller="Actividades" asp-action="Index" asp-route-grupoId="@Model.GrupoId" class="btn btn-outline-primary m-2">
                <i class="fas fa-plus-circle me-2"></i>Crear Actividad
            </a>
        }
            <div class="calendar-navigation">
                <button id="prevMonthBtn" class="btn btn-outline-secondary">
                    <i class="fas fa-chevron-left me-2"></i>Mes Anterior
                </button>
                <button id="nextMonthBtn" class="btn btn-outline-secondary">
                    Mes Siguiente<i class="fas fa-chevron-right ms-2"></i>
                </button>
            </div>

            <div id="calendar"></div>
        </div>
    </div>

    <!-- Modal para Detalles del Evento -->
    <div class="modal fade" id="eventDetailsModal" tabindex="-1">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-light">
                    <h5 class="modal-title" id="eventDetailsTitle"></h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <p><strong>Descripción:</strong> <span id="eventDetailsDescription"></span></p>
                    <p><strong>Fecha de Inicio:</strong> <span id="eventDetailsDate"></span></p>
                    <p><strong>Fecha de Fin:</strong> <span id="eventDetailsEndDate"></span></p>
                </div>
                <div class="modal-footer">
                    <a id="editEventButton" class="btn btn-sm btn-warning">
                        <i class="fas fa-edit me-2"></i>Editar
                    </a>
                    <a id="deleteEventButton" class="btn btn-sm btn-danger">
                        <i class="fas fa-trash-alt me-2"></i>Eliminar
                    </a>
                </div>
            </div>
        </div>
    </div>



@section Scripts {
    <link rel="stylesheet" href="https://uicdn.toast.com/calendar/latest/toastui-calendar.min.css">
    <script src="https://uicdn.toast.com/calendar/latest/toastui-calendar.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const events = @Html.Raw(Json.Serialize(Model.Eventos.Select(e => new
            {
                id = e.IdActividad.ToString(),
                title = e.Titulo,
                start = e.FechaCreacion,
                end= e.FechaActividad,
                color = e.Color,
                raw = e.Descripcion
            })));
            // Cambiar color si el evento ha pasado
            events.forEach(event => {
                const eventEndDate = new Date(event.end);
                const currentDate = new Date();

                // Si el evento ha pasado, cambiar el color
                if (eventEndDate < currentDate) {
                    event.color = '#d9534f'; // Color rojo para eventos pasados
                }


            });
            console.log(events);
            const container = document.getElementById('calendar');
            const options = {
                defaultView: 'month',
                useCreationPopup: false,
                useDetailPopup: false,
                taskView: false,
                timezone: {
                    zones: [
                        {
                            timezoneName: 'America/Guayaquil', // Time zone for Ecuador
                            displayLabel: 'Ecuador Time'
                        }
                    ]
                }
               
            };

            const calendar = new tui.Calendar(container, options);
            calendar.createEvents(events);

            calendar.on('clickEvent', function (eventInfo) {
                // Access the description directly from the event object, not from `raw`
                const description = eventInfo.event.raw || 'Sin descripción';

                // Convert UTC start date to Ecuador Time (America/Guayaquil)
                const eventStartDate = new Date(eventInfo.event.start);
                const eventEndDate = new Date(eventInfo.event.end);

                const ecuadorStartTime = new Date(eventStartDate.toLocaleString('en-US', { timeZone: 'America/Guayaquil' }));
                const ecuadorEndTime = new Date(eventEndDate.toLocaleString('en-US', { timeZone: 'America/Guayaquil' }));

                // Display event details in the modal
                $('#eventDetailsTitle').text(eventInfo.event.title);
                $('#eventDetailsDescription').text(description);
                $('#eventDetailsDate').text(`Fecha de inicio: ${ecuadorStartTime.toLocaleString()} (Hora Ecuador)`);
                $('#eventDetailsEndDate').text(`Fecha de fin: ${ecuadorEndTime.toLocaleString()} (Hora Ecuador)`);

                // Optionally, if you have a creation date (FechaCreacion), you can add it here
                const creationDate = eventInfo.event.raw ? new Date(eventInfo.event.raw.creationDate) : null;
                if (creationDate) {
                    const ecuadorCreationTime = new Date(creationDate.toLocaleString('en-US', { timeZone: 'America/Guayaquil' }));
                    $('#eventDetailsCreationDate').text(`Fecha de creación: ${ecuadorCreationTime.toLocaleString()} (Hora Ecuador)`);
                }

                // Establecer las URLs para los botones de editar y eliminar
                const editUrl = `/Actividades/Edit?id=${eventInfo.event.id}`;
                const deleteUrl = `/Actividades/Delete?idActividad=${eventInfo.event.id}`;

                // Asignar las URLs a los botones
                $('#editEventButton').attr('href', editUrl);
                $('#deleteEventButton').attr('href', deleteUrl);

                // SweetAlert confirmation for delete
                $('#deleteEventButton').on('click', function (e) {
                    e.preventDefault();
                    Swal.fire({
                        title: '¿Estás seguro?',
                        text: "No podrás revertir esta acción",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#d33',
                        cancelButtonColor: '#3085d6',
                        confirmButtonText: 'Sí, eliminar',
                        cancelButtonText: 'Cancelar'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = deleteUrl;
                        }
                    });
                });

                $('#editEventButton').on('click', function (e) {
                    e.preventDefault();
                    Swal.fire({
                        title: '¿Estás seguro?',
                        text: "No podrás revertir esta acción",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#d33',
                        cancelButtonColor: '#3085d6',
                        confirmButtonText: 'Sí, Editar',
                        cancelButtonText: 'Cancelar'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = editUrl;
                        }
                    });
                });
                // Show the modal with the updated details
                $('#eventDetailsModal').modal('show');
            });


            // Manejadores para cambiar al mes anterior o siguiente
            document.getElementById('prevMonthBtn').addEventListener('click', function () {
                calendar.prev();  // Cambia al mes anterior
            });

            document.getElementById('nextMonthBtn').addEventListener('click', function () {
                calendar.next();  // Cambia al mes siguiente
            });

       



        });
    </script>
}